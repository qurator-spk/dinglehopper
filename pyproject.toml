[build-system]
requires = ["setuptools>=61.0.0", "wheel", "setuptools-ocrd"]

[project]
name = "dinglehopper"
authors = [
    {name = "Mike Gerber", email = "mike.gerber@sbb.spk-berlin.de"},
    {name = "The QURATOR SPK Team", email = "qurator@sbb.spk-berlin.de"},
]
description = "An OCR evaluation tool"
readme = "README.md"
license.file = "LICENSE"
requires-python = ">=3.8"
keywords = ["qurator", "ocr", "evaluation", "ocr-d"]

dynamic = ["version", "dependencies", "optional-dependencies"]

# https://pypi.org/classifiers/
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing",
]

[project.scripts]
dinglehopper = "dinglehopper.cli:main"
dinglehopper-line-dirs = "dinglehopper.cli_line_dirs:main"
dinglehopper-extract = "dinglehopper.cli_extract:main"
dinglehopper-summarize = "dinglehopper.cli_summarize:main"
ocrd-dinglehopper = "dinglehopper.ocrd_cli:ocrd_dinglehopper"


[project.urls]
Homepage = "https://github.com/qurator-spk/dinglehopper"
Repository = "https://github.com/qurator-spk/dinglehopper.git"


[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}
optional-dependencies.dev = {file = ["requirements-dev.txt"]}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
dinglehopper = ["templates/*", "*.json"]


[tool.pytest.ini_options]
minversion = 6.0
addopts = "--strict-markers"
markers = [
    "integration: integration tests",
]


[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]

ignore_missing_imports = true


strict = true

disallow_subclassing_any = false
# ‚ùó error: Class cannot subclass "Processor" (has type "Any")
disallow_any_generics = false
disallow_untyped_defs = false
disallow_untyped_calls = false


[tool.ruff.lint]
select = ["E", "F", "I", "B"]


[tool.liccheck]
authorized_licenses = [
    "bsd",
    "new bsd",
    "bsd license",
    "new bsd license",
    "simplified bsd",
    "apache",
    "apache 2.0",
    "apache software license",
    "apache software",
    "apache license 2.0",
    "gnu lgpl",
    "lgpl with exceptions or zpl",
    "GNU Library or Lesser General Public License (LGPL)",
    "GNU Lesser General Public License v3 (LGPLv3)",
    "GNU Lesser General Public License v2 or later (LGPLv2+)",
    "mit",
    "mit license",
    "mit-cmu",
    "python software foundation",
    "psf",
    "psf-2.0",
    "Historical Permission Notice and Disclaimer (HPND)",
    "public domain",
    'The Unlicense (Unlicense)',
    "isc",
    "ISC License (ISCL)",
    'Mozilla Public License 2.0 (MPL 2.0)',
]
unauthorized_licenses = [
    "gpl v3",
]
